name: Deploy to EC2 as Docker

on:
  push:
    branches: [staging]

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: wasak

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3

      - name: Create .env
        run: |
          touch ./.env
          echo "${{ secrets.APPLICATION_SETTING }}" > ./.env
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push server-deploy image to Amazon ECR
        id: build-image-staging
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          DATE=$(date "+%y.%m.%d")
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on staging server
        if: contains(github.ref, 'staging')
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_HOST_DEPLOY }}
          username: ${{ secrets.AWS_SSH_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script_stop: true
          script: |
            password=$(aws ecr get-login-password --region ${{ env.AWS_REGION }})
            docker login --username AWS --password $password ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            docker container stop ${{env.ECR_REPOSITORY}}-staging 2>/dev/null || true
            docker container rm ${{env.ECR_REPOSITORY}}-staging 2>/dev/null || true
            docker run -d -p 8000:8000 --network tokpeanut-network --name ${{env.ECR_REPOSITORY}}-staging ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            docker images | awk '$1 == "${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}" && $2 == "<none>" {print $3}' | xargs -I {} docker rmi {}
